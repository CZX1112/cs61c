RISC-V Calling Conventions调用约定

7.1 我们如何将参数传递给函数？
使用 8 个参数寄存器 a0 - a7。

7.2 函数如何返回值？
使用 a0 和 a1 作为返回值寄存器。

7.3 什么是 sp 以及如何在 RISC-V 函数的上下文中使用它？
sp 代表堆栈指针，它表示存储数据和堆栈上可用空间之间的边界。 因为堆栈向下增长，
我们从 sp 中减去以创建更多空间（向下移动堆栈指针），并添加到 sp 以释放空间
（将堆栈指针向上移动）。 堆栈主要用于保存（以及稍后恢复）可能被覆盖的寄存器的值。

7.4 在跳转到使用 jal 的函数之前，调用者需要保存哪些值？
寄存器 a0 - a7，t0 - t6，以及寄存器 ra。

7.5 在从函数返回之前，被调用者需要恢复哪些值？
寄存器 sp、gp（全局指针）、tp（线程指针）和 s0 - s11。 请注意，我们不经常使用 gp 和 tp。

7.6 在无错误的程序中，哪些寄存器在函数调用后保证相同？ 哪些寄存器不能保证相同？
函数调用后寄存器 a0 - a7、t0 - t6 和 ra 不能保证相同（这就是调用者必须保存它们的原因）。
寄存器 sp、gp、tp 和 s0 - s11 在函数调用后保证相同（这就是被调用者必须在返回前恢复它们的原因）。