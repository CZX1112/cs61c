2. AMAT
回想一下，AMAT 代表平均内存访问时间。其主要公式为：
AMAT = 命中时间 + 失误率 * 失误惩罚

在多级缓存中，我们为每个级别考虑两种类型的未命中率。
全局：计算为该级别错过的访问次数除以缓存系统的访问总数。
本地：计算为该级别错过的访问次数除以该缓存级别的访问总数。

2.1 L2$ 在对缓存系统的 100 次总访问中，错过了 20 次。 L2$ 的全局错失率是多少？

20 / 100 = 20%

2.2 如果 L1$ 的未命中率为 50%，那么 L2$ 的本地未命中率是多少？

20 / (50% * 100) = 20/50 = 40%
我们知道当 L1$ 未命中时会访问 L2$，因此如果 L1$ 未命中 50% 的时间，则意味着我们访问 L2$ 50 次。

假设您的系统包括：
1. 命中时间为 2 个周期且局部未命中率为 20% 的 L1$
2. 命中时间为 15 个周期且全局丢失率为 5% 的 L2$
3. 主存储器，访问需要 100 个周期

2.3 L2$ 的本地未命中率是多少？

L2$ Local miss rate = Global Miss Rate / L1$ Miss Rate = 5%/20% = 25%

2.4 系统的 AMAT 是什么？

AMAT = 2 + 20% x 15 + 5% x 100 = 10 cycles (using global miss rates)
Alternatively, AMAT = 2 + 20% x (15 + 25% x 100) = 10 cycles

2.5 假设我们想通过添加 L3$ 将系统的 AMAT 减少到 8 个周期或更低。 如果L3$的局部未命中率为30%，
那么L3$的最大命中时间是多少？

Let H = hit time of the cache. Using the AMAT equation, we can write:
2 + 20% ∗ (15 + 25% ∗ (H + 30% ∗ 100)) ≤ 8
Solving for H, we find that H ≤ 30. So the largest hit time is 30 cycles.